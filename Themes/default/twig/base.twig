<!DOCTYPE html >
<html id="_S_" lang="en-US">
	<head>
		<link rel="stylesheet" type="text/css" href="{{ S.primary_css}}" />
		{% if C.right_to_left > 0 %}
		<link rel="stylesheet" type="text/css" href="{{ S.theme_url }}/css/rtl.css" />
		{% endif %}

		{% if M.jQueryFromGoogleCDN is not empty %}
		<script type="text/javascript" src="{{ C.is_https ? 'https://' : 'http://' }}ajax.googleapis.com/ajax/libs/jquery/{{ C.jquery_version }}/jquery.min.js"></script>
		{% else %}
		<script type="text/javascript" src="{{ S.default_theme_url }}/scripts/min/jquery.js?v=162"></script>
		{% endif %}

		<script type="text/javascript" src="{{ S.default_theme_url }}/scripts/script.js{{ C.jsver }}"></script>
		{% if C.theme_scripts is not empty %}
			{% for script in C.theme_scripts %}
			{% if script.footer is empty %}
				<script type="text/javascript" src="',($script['default'] ? $settings['default_theme_url'] : $settings['theme_url']) . '/' . $script['name'] . $context['jsver'], '"></script>
			{% endif %}
			{% endfor %}
		{% endif %}
		<script type="text/javascript">
		// <![CDATA[
			var smf_theme_url = '{{ S.theme_url }}';
			var smf_default_theme_url = '{{ S.default_theme_url }}';
			var smf_images_url = '{{ S.images_url }}';
			var smf_scripturl = '{{ SCRIPTURL }}';
			var smf_iso_case_folding = {{ C.server.iso_case_folding ? "true" : "false" }};
			var smf_charset = 'UTF-8';
			var sSessionId = '{{ C.session_id }}';
			var sSessionVar = '{{ C.session_var }}';
			var disableDynamicTime = {{ O.disable_dynatime is not empty ? 0 : 1}};
			var textSizeUnit = 'pt';
			var textSizeStep = 1;
			var textSizeMax = 16;
			var textSizeMin = 8;
			var textSizeDefault = 10;
			var sideBarWidth = 250;
			var sidebar_content_loaded = 0;
			var cookie = readCookie('SMF_textsize');
			var fb_appid = '{{ M.fb_appid }}';
			var ssp_imgpath = '{{ S.images_url }}/share';
			var textsize = cookie ? parseInt(cookie) : textSizeDefault;
			var anchor = document.getElementsByTagName('SCRIPT')[0];
			var t2 = document.createElement('SCRIPT');
			var _cname = '{{ COOKIENAME }}';
			var _mqcname = '{{ C.multiquote_cookiename }}';
			var guest_time_offset = 0;
			t2.type = "text/javascript";
			t2.async = true;
			t2.src = '{{ S.default_theme_url }}/scripts/footer.js{{ C.jsver }}';
			anchor.parentNode.insertBefore(t2, anchor);
		// ]]>
		</script>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="description" content="{{ C.page_description_html_safe }}" />
		{% if C.meta_keywords is not empty %}
		<meta name="keywords" content="{{ C.meta_keywords }}" />
		{% endif %}
		<title>{{ C.page_title_html_safe }}</title>

		{% if U.is_guest %}
		<script type="text/javascript">
		// <![CDATA[
			function calculate_time_zone() {
				var rightNow = new Date();
				var jan1 = new Date(rightNow.getFullYear(), 0, 1, 0, 0, 0, 0);  // jan 1st
				var june1 = new Date(rightNow.getFullYear(), 6, 1, 0, 0, 0, 0); // june 1st
				var temp = jan1.toGMTString();
				var jan2 = new Date(temp.substring(0, temp.lastIndexOf(" ")-1));
				temp = june1.toGMTString();
				var june2 = new Date(temp.substring(0, temp.lastIndexOf(" ")-1));
				var std_time_offset = (jan1 - jan2) / (1000 * 60 * 60);
				var daylight_time_offset = (june1 - june2) / (1000 * 60 * 60);
				var dst;
				if (std_time_offset == daylight_time_offset) {
					dst = "0"; // daylight savings time is NOT observed
				} else {
					// positive is southern, negative is northern hemisphere
					var hemisphere = std_time_offset - daylight_time_offset;
					if (hemisphere >= 0)
						std_time_offset = daylight_time_offset;
					dst = "1"; // daylight savings time is observed
				}
				var i;
				// check just to avoid error messages
				if (document.getElementById('timezone')) {
					for (i = 0; i < document.getElementById('timezone').options.length; i++) {
						if (document.getElementById('timezone').options[i].value == convert(std_time_offset)+","+dst) {
							document.getElementById('timezone').selectedIndex = i;
							break;
						}
					}
				}
				return(parseInt(std_time_offset) + parseInt(dst));
			}

			function convert(value) {
				var hours = parseInt(value);
				value -= parseInt(value);
				value *= 60;
				var mins = parseInt(value);
				value -= parseInt(value);
				value *= 60;
				var secs = parseInt(value);
				var display_hours = hours;
				// handle GMT case (00:00)
				if (hours == 0) {
					display_hours = "00";
				} else if (hours > 0) {
					// add a plus sign and perhaps an extra 0
					display_hours = (hours < 10) ? "+0"+hours : "+"+hours;
				} else {
					// add an extra 0 if needed
					display_hours = (hours > -10) ? "-0"+Math.abs(hours) : hours;
				}

				mins = (mins < 10) ? "0"+mins : mins;
				return display_hours+":"+mins;
			}
				guest_time_offset = calculate_time_zone();
		// ]]>
		</script>
		{% endif %}

		{% if C.robot_no_index is defined %}
			<meta name="robots" content="noindex" />
		{% endif %}
		{# Present a canonical url for search engines to prevent duplicate content in their indices. #}
		{% if C.canonical_url is defined %}
			<link rel="canonical" href="{{ C.canonical_url }}" data-href="{{ C.share_url is not empty ? C.share_url : '' }}" />
		{% endif %}
		{# Show all the relative links, such as help, search, contents, and the like. #}
		<link rel="search" href="{{ SCRIPTURL }}?action=search" />
		{# If RSS feeds are enabled, advertise the presence of one. #}
		{% if M.xmlnews_enable is not empty and (M.allow_guestAccess is not empty or C.user.is_logged) %}
		<link rel="alternate" type="application/rss+xml" title="{{ C.forum_name_html_safe }} - {{ T.rss }}" href="{{ SCRIPTURL }}?type=rss;action=.xml" />
		{% endif %}

		{# If we're viewing a topic, these should be the previous and next topics, respectively. #}
		{% if C.current_topic is defined %}
		<link rel="prev" href="{{ SCRIPTURL }}?topic={{ C.current_topic }}.0;prev_next=prev" />
		<link rel="next" href="{{ SCRIPTURL }}?topic={{ C.current_topic }}.0;prev_next=next" />
		{% endif %}

		{# If we're in a board, or a topic for that matter, the index will be the board's index. #}
		{% if C.current_board is defined %}
		<link rel="index" href="{{ SCRIPTURL }}?board={{ C.current_board }}.0" />
		{% endif %}
		{# Output any remaining HTML headers. (from mods, maybe?) #}
		{{ C.html_headers }}
		<style>
	 		#main_content_section {max-width: {{ C.content_width is defined ? O.content_width : '95%' }};}
			{% if C.css_overrides is defined and C.css_overrides|length %}
			{% for css in C.css_overrides %}
			{{ css }}
			{% endfor %}
			{% endif %}
		</style>

	</head>

	<body>
		{% include "linktree.twig" %}
		{% block content %}
		{% endblock %}

		{% if U.is_admin %}
		I am admin
		{% endif %}
	</body>
</html>
