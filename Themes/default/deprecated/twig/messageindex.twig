{#
 * @name      EosAlpha BBS
 * @copyright 2011 Alex Vie silvercircle(AT)gmail(DOT)com
 *
 * This software is a derived product, based on:
 *
 * Simple Machines Forum (SMF)
 * copyright: 2011 Simple Machines (http://www.simplemachines.org)
 * license:   BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0pre
 * #}

{% extends "base.twig" %}
{% import "generics.twig" as generics %}
{% import "boardbits.twig" as boardbits %}
{% set c_widgetstyle = 'framed_region cleantop tinypadding' %}
{% block content %}
<a id="top"></a>
<h1 class="bigheader">{{ C.name }}</h1>
{% if O.show_board_desc is not empty and C.description != '' %}  
  <div class="smalltext">{{ C.description }}</div>
{% endif %}

{# the child boards (if we have one and want them to be visible) #}
{% if C.boards is defined and C.boards|length > 0 and (O.show_children is not empty or C.start == 0) %}
  <br>
  {{ generics.collapser(_context, C.current_board ~ '_childboards', T.parent_boards, c_widgetstyle ) }}
  <div class="framed_region smallpadding">
    <ol id="board_{{ C.current_board }}_children" class="commonlist category">
    {% for board in C.boards %}
      {% if board.ignored == 0 %}
        {{ boardbits.boardbit(board, _context) }}
      {% endif %}
    {% endfor %}
    </ol>
  </div>
  </div>
{% endif %}
{% if C.hidden_boards.hidden_count %}
  <br>
  <div id="show_hidden_boards" class="orange_container norounded gradient_darken_down tinytext">
    <span class="floatright">{{ C.hidden_boards.setup_notice }}</span><strong> {{ sprintf(C.hidden_boards.notice, C.hidden_boards.hidden_count, '<a onclick="$(\'div#hidden_boards\').fadeIn();return(false);" href="!#">') }}</strong>
  </div>
  <div class="category" id="hidden_boards" style="display:none;">
    <div class="framed_region cleantop root_cat" id="category_0">
      <ol class="commonlist category">
        {% for board in C.hidden_boards.boards %}
          {% if board.ignored == 0 %}
            {{ boardbits.boardbit(board, _context) }}
          {% endif %}
        {% endfor %}
      </ol>
    </div>
  </div>
  <div class="cContainer_end"></div>';
{% endif %}

{% if C.act_as_cat == 0 %}
  {% if C.no_topic_listing == 0 %}
    <div class="pagesection top smallpadding">
      <div class="pagelinks floatleft">{{ C.page_index }}&nbsp;&nbsp;<a class="navPages" href="#bot">{{ T.go_down }}</a></div>
      {{ button_strip(C.normal_buttons, 'right') }}
    </div>
    {# If Quick Moderation is enabled start the form. #}
    {% if C.can_quick_mod and O.display_quick_mod > 0 and (C.topics is defined and C.topics|length > 0) %}
      <form action="{{ SCRIPTURL }}?action=quickmod;board={{ C.current_board }}.{{ C.start }}" method="post" accept-charset="UTF-8" class="clear" name="quickModForm" id="quickModForm">
    {% endif %}
    <div class="framed_region">
      <table class="topic_table">
      {# Are there actually any topics to show? #}
      {% if C.topics is defined and C.topics|length > 0 %}
        <thead>
        <tr class="mediumpadding">
          <th scope="col" colspan="2" class="first_th glass cleantop" style="width:8%;">&nbsp;</th>
          <th scope="col" class="lefttext nowrap glass cleantop"><a rel="nofollow" href="{{ SCRIPTURL }}?board={{ C.current_board }}.{{ C.start }};sort=subject{{ C.sort_by == 'subject' and C.sort_direction == 'up' ? ';desc' : '' }}">{{ T.subject }}{{ C.sort_by == 'subject' ? ' <img src="' ~ S.images_url ~ '/sort_' ~ C.sort_direction ~ '.gif" alt="" />' : '' }}</a> / <a rel="nofollow" href="{{ SCRIPTURL }}?board={{ C.current_board }}.{{ C.start }};sort=starter{{ C.sort_by == 'starter' and C.sort_direction == 'up' ? ';desc' : '' }}">{{ T.started_by }}{{ C.sort_by == 'starter' ? ' <img src="' ~ S.images_url ~ '/sort_' ~ C.sort_direction ~ '.gif" alt="" />' : '' }}</a></th>
          <th scope="col" class="nowrap glass cleantop"><a rel="nofollow" href="{{ SCRIPTURL }}?board={{ C.current_board }}.{{ C.start }};sort=replies{{ C.sort_by == 'replies' and C.sort_direction == 'up' ? ';desc' : '' }}">{{ T.replies }}{{ C.sort_by == 'replies' ? ' <img src="' ~ S.images_url ~ '/sort_' ~ C.sort_direction ~ '.gif" alt="" />' : '' }} </a> / <a href="{{ SCRIPTURL }}?board={{ C.current_board }}.{{ C.start }};sort=views{{ C.sort_by == 'views' and C.sort_direction == 'up' ? ';desc' : '' }}">{{ T.views }}{{ C.sort_by == 'views' ? ' <img src="' ~ S.images_url ~ '/sort_' ~ C.sort_direction ~ '.gif" alt="" />' : ''}} </a></th>
          <th scope="col" class="centertext nowrap glass cleantop"><a rel="nofollow" href="{{ SCRIPTURL }}?board={{ C.current_board }}.{{ C.start }};sort=last_post{{ C.sort_by == 'last_post' and C.sort_direction == 'up' ? ';desc' : '' }}">{{ T.last_post }}{{ C.sort_by == 'last_post' ? ' <img src="' ~ S.images_url ~ '/sort_' ~ C.sort_direction ~ '.gif" alt="" />' : '' }}</a></th>
          {# Show a "select all" box for quick moderation? #}
          {% if C.can_quick_mod is not empty %}
            <th scope="col" class="glass cleantop last_th" style="width:24px;"><input type="checkbox" class="input_check cb_invertall" /></th>
          {% endif %}
      {% else %}
        {# No topics.... just say, "sorry bub". #}
        <thead>
        <tr>
          <th class="red_container"><strong>{{ T.msg_alert_none }}</strong></th>
      {% endif %}
        </tr>
        </thead>
      {% if S.display_who_viewing is not empty and S.display_who_viewing %}
        <tr class="whos_viewing mediumpadding">
          <td colspan="{{ C.can_quick_mod is not empty ? '6' : '5' }}" class="smalltext">
          {% if S.display_who_viewing == 1 %}
            {{ C.view_members|length }} {{ C.view_members|length  == 1 ? T.who_member : T.members }}
          {% else %}
            {{ C.view_members_list is empty ? '0 ' ~ T.members : implode(', ', C.view_members_list) ~ ((C.view_num_hidden == 0 or C.can_moderate_forum) ? '' : ' (+ ' ~ C.view_num_hidden ~ ' ' ~ T.hidden ~ ')') }}
          {% endif %}
            {{ T.who_and }}{{ C.view_num_guests }} {{ C.view_num_guests == 1 ? T.guest : T.guests }}{{ T.who_viewing_board }}
          </td>
        </tr>
      {% endif %}
      {# If this person can approve items and we have some awaiting approval tell them. #}
      {% if C.unapproved_posts_message is defined and C.unapproved_posts_message is not empty %}
        <tr class="windowbg2">
          <td colspan="{{ C.can_quick_mod is not empty ? '6' : '5' }}">
            <span class="alert">!</span>{{ C.unapproved_posts_message }}
          </td>
        </tr>
      {% endif %}
      {% for topic in C.topics %}
        {{ generics.topicbit(topic, _context) }}
      {% endfor %}
      {% if C.can_quick_mod is not empty and O.display_quick_mod and (C.topics is defined and C.topics|length > 0) %}
        <tr>
          <td colspan="6" class="righttext">
            <select class="qaction" name="qaction"{{ C.can_move ? ' onchange="this.form.moveItTo.disabled = (this.options[this.selectedIndex].value != \'move\');"' : '' }}>
              <option value="">--------</option>
              {{ C.can_remove ? '<option value="remove">' ~ T.quick_mod_remove ~ '</option>' : '' }}
              {{ C.can_lock ? '<option value="lock">' ~ T.quick_mod_lock ~ '</option>' : '' }}
              {{ C.can_sticky ? '<option value="sticky">' ~ T.quick_mod_sticky ~ '</option>' : '' }}
              {{ C.can_move ? '<option value="move">' ~ T.quick_mod_move ~ ': </option>' : '' }}
              {{ C.can_merge ? '<option value="merge">' ~ T.quick_mod_merge ~ '</option>' : '' }}
              {{ C.can_restore ? '<option value="restore">' ~ T.quick_mod_restore ~ '</option>' : '' }}
              {{ C.can_approve ? '<option value="approve">' ~ T.quick_mod_approve ~ '</option>' : '' }}
              {{ C.user.is_logged ? '<option value="markread">' ~ T.quick_mod_markread ~ '</option>' : '' }}
            </select>

            {# Show a list of boards they can move the topic to. #}
            {% if C.can_move %}
              <select class="qaction" id="moveItTo" name="move_to" disabled="disabled">
              {% for cat in C.move_to_boards %}
                <optgroup label="{{ cat.name }}">
                {% for board in cat.boards %}
                  <option value="{{ board.id }}"{{ board.selected ? ' selected="selected"' : '' }}>{{ board.child_level > 0 ? str_repeat('==', board.child_level - 1) ~ '=&gt;' : '' }} {{ board.name }}</option>
                {% endfor %}
              </optgroup>
              {% endfor %}
            </select>
            {% endif %}
            <input type="submit" value="{{ T.quick_mod_go }}" onclick="return document.forms.quickModForm.qaction.value != '' && confirm('{{ T.quickmod_confirm }}');" class="button_submit qaction" />
          </td>
        </tr>
      {% endif %}
        </tbody>
      </table>
    </div>
  {% endif %}
  <a id="bot"></a>

  {% if C.can_quick_mod is not empty and O.display_quick_mod > 0 and ( C.topics is defined and C.topics|length > 0) %}
    <input type="hidden" name="{{ C.session_var }}" value="{{ C.session_id }}" />
    </form>
  {% endif %}
  <div class="pagesection bottom smallpadding">
    {{ button_strip(C.normal_buttons, 'right') }}
    <div class="pagelinks floatleft">{{ C.page_index }}&nbsp;&nbsp;<a class="navPages" href="#top">{{ T.go_up }}</a></div>
  </div>
  {% endif %} {# if C.act_as_cat == 0 % #}
  {% include "linktree.twig" %}
  
  <div class="tborder" id="topic_icons">
    <div class="description">
      <p class="floatright" id="message_index_jump_to">&nbsp;</p>
      <br class="clear" />
    </div>
  </div>
{% endblock content %}
{% block footerscripts %}
<script>
  // <![CDATA[
  if (typeof(window.XMLHttpRequest) != "undefined")
    aJumpTo[aJumpTo.length] = new JumpTo({
    sContainerId: "message_index_jump_to",
    sJumpToTemplate: '<label class="smalltext" for="%select_id%">{{ C.jump_to.label }}:</label> %dropdown_list%',
    iCurBoardId: {{ C.current_board }},
    iCurBoardChildLevel: {{ C.jump_to.child_level }},
    sCurBoardName: "{{ C.jump_to.board_name }}",
    sBoardChildLevelIndicator: "==",
    sBoardPrefix: "=> ",
    sCatSeparator: "-----------------------------",
    sCatPrefix: "",
    sGoButtonLabel: "{{ T.quick_mod_go }}"
  });

  // Javascript for inline editing.
  // Hide certain bits during topic edit.
  hide_prefixes.push("lockicon", "stickyicon", "pages", "newicon");

  // Use it to detect when we\'ve stopped editing.
  document.onclick = modify_topic_click;

  var mouse_on_div;
  function modify_topic_click()
  {
    if (in_edit_mode == 1 && mouse_on_div == 0)
      modify_topic_save("{{ C.session_id }}", "{{ C.session_var }}");
  }

  function modify_topic_keypress(oEvent)
  {
    if (typeof(oEvent.keyCode) != "undefined" && oEvent.keyCode == 13)
    {
      modify_topic_save("{{ C.session_id }}", "{{ C.session_var }}");
      if (typeof(oEvent.preventDefault) == "undefined")
        oEvent.returnValue = false;
      else
        oEvent.preventDefault();
    }
  }

  // For templating, shown when an inline edit is made.
  function modify_topic_show_edit(subject)
  {
    // Just template the subject.
    setInnerHTML(cur_subject_div, '<input type="text" name="subject" value="' + subject + '" size="60" style="width: 95%;" maxlength="80" onkeypress="modify_topic_keypress(event)" class="input_text" /><input type="hidden" name="topic" value="' + cur_topic_id + '" /><input type="hidden" name="msg" value="' + cur_msg_id.substr(4) + '" />');
  }

  // And the reverse for hiding it.
  function modify_topic_hide_edit(subject)
  {
    // Re-template the subject!
    setInnerHTML(cur_subject_div, '<a href="{{ SCRIPTURL }}?topic=' + cur_topic_id + '.0">' + subject + '<' +'/a>');
  }
  // ]]>
</script>
{% endblock footerscripts %}
